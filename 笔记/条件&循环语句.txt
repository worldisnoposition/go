1.条件语句
    1) if else语句
       if a > 10 {

       } else {

       }
    2) switch从上至下依次匹配
       var mark int = 90
       var grand string = "b"
       switch mark{
           case 90: grand = "a"
           case 80: grand = "b"
           case 50,60,70: grand = "c"
           default : grand = "d" 
       }
    3) select 语句，类似于switch操作。每个case必须是一个通信操作，要么发送，要么接收。select将随机执行一个可运行的case，如果没有case可以执行
    它将阻塞，直到case可以运行。一个默认的子句应该总是可以运行的。
        每个case必须是一个通信
        每个channel表达式都会被求值
        所有被发送的表达式都会被求值
        如果任意某个通信可以进行，他就执行，其他被忽略
        如果有多个case都可以运行，select会随机公平选出一个执行，其他不会执行
        func main() {
            var c1, c2, c3 chan int
            var i1, i2 int
            select {
                case i1 = <-c1:
                    fmt.Printf("received ", i1, " from c1\n")
                case c2 <- i2:
                    fmt.Printf("sent ", i2, " to c2\n")
                case i3, ok := (<-c3):  // same as: i3, ok := <-c3
                    if ok {
                    fmt.Printf("received ", i3, " from c3\n")
                    } else {
                    fmt.Printf("c3 is closed\n")
                    }
                default:
                    fmt.Printf("no communication\n")
            }    
        }
2.循环语句
    go语言有for循环，有break,continue，goto
    for a := 0; a < 10; a++ {

    }
    for a < b {
        a++
    }
    numbers := [6]int{1,2,3,5}//长度为6，后2个默认就是0
    for i,x:=range numbers{

    }