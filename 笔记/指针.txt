1.什么是指针
    一个指针变量指向了一个值的内存地址。
2.定义一个指针
    var ip *int        /* 指向整型*/
    var fp *float32    /* 指向浮点型 */
3.如何使用指针
    1）定义一个指针
    2）为指针赋值
    3）访问指针指向地址的值
    例子：
    func main() {
        var a int= 20   /* 声明实际变量 */
        var ip *int        /* 声明指针变量 */

        ip = &a  /* 指针变量的存储地址 */

        fmt.Printf("a 变量的地址是: %x\n", &a  )

        /* 指针变量的存储地址 */
        fmt.Printf("ip 变量储存的指针地址: %x\n", ip )

        /* 使用指针访问值 */
        fmt.Printf("*ip 变量的值: %d\n", *ip )
    }
4.go空指针
    当一个指针被定义后没有分配任何变量，它的值是nil
5.指针数组
    const MAX int = 3
    func main() {
        a := []int{10,100,200}
        var i int
        var ptr [MAX]*int;

        for  i = 0; i < MAX; i++ {
            ptr[i] = &a[i] /* 整数地址赋值给指针数组 */
        }

        for  i = 0; i < MAX; i++ {
            fmt.Printf("a[%d] = %d\n", i,*ptr[i] )//这样就把值打印出来了
        }
    }
6.指向指针的指针
   var a int
   var ptr *int
   var pptr **int

   a = 3000

   /* 指针 ptr 地址 */
   ptr = &a

   /* 指向指针 ptr 地址 */
   pptr = &ptr

   /* 获取 pptr 的值 */
   fmt.Printf("变量 a = %d\n", a )
   fmt.Printf("指针变量 *ptr = %d\n", *ptr )
   fmt.Printf("指向指针的指针变量 **pptr = %d\n", **pptr)
7.指针作为函数参数
    swap(&a, &b)//这样调用，交换a,b的值
    func swap(x *int, y *int) {
        var temp int
        temp = *x    /* 保存 x 地址的值 */
        *x = *y      /* 将 y 赋值给 x */
        *y = temp    /* 将 temp 赋值给 y */
    }